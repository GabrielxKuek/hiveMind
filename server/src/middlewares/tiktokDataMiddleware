// this middleware is in charge of fetching video data from tiktok tags
// this uses tiktok-trending-data (my own repo i made for this hackathon) 
// to fetch data on the most popular trends in a configurable day (as of 
// writing this it is set to one day)

// config
const acceptableSubdomains = [
    "us",
    "www",
    "m"
]

////////////////////////////////////////////////////
// MIDDLEWARE FUNCTION FOR FETCHING TRENDING TAGS
////////////////////////////////////////////////////
module.exports.fetchTrendingTags = async (req, res, next) => {
    const { subdomain, isList } = req.body;

    try {
        if (isList == null || subdomain == null) {
            throw new Error('Missing required parameters');
        }

        if (!acceptableSubdomains.includes(subdomain)) {
            if (isList && subdomain == "m") {
                throw new Error('Invalid subdomain for list');
            }
            throw new Error('Invalid subdomain');
        }

        const url = `https://tiktok-trending-data.onrender.com/api/discover/${isList ? "list/" : ""}${subdomain}`;
        const response = await fetch(url);
        const data = await response.json();
        
        res.locals.tiktokData = data;
        next();
    } catch (error) {
        console.error('Error fetching videos:', error);
        res.status(500).json({ error: 'Error fetching videos' });
    }
}

////////////////////////////////////////////////////
// MIDDLEWARE FUNCTION FOR FETCHING TRENDING AUDIO
////////////////////////////////////////////////////
module.exports.fetchTrendingAudio = async (req, res, next) => {
    const { subdomain, isList } = req.body;

    try {
        // fetch trending audio
        if (isList == null || subdomain == null) {
            throw new Error('Missing required parameters');
        }

        if (!acceptableSubdomains.includes(subdomain)) {
            if (isList && subdomain == "m") {
                throw new Error('Invalid subdomain for list');
            }
            throw new Error('Invalid subdomain');
        }

        const url = `https://tiktok-trending-data.onrender.com/api/discover/${isList ? "list/" : ""}${subdomain}`;
        const response = await fetch(url);
        const responseJson = await response.json();
        const audioData = responseJson.body.discoverList.filter(item => item.type == 1);
        
        next();

    } catch (error) {
        console.error('Error fetching audio:', error);
        res.status(500).json({ error: 'Error fetching videos' });
    }

    try {
        // fetch videos in trending audio
        

    } catch (error) {
        console.error('Error fetching audio videos:', error);
        res.status(500).json({ error: 'Error fetching audio videos' });
    }
}